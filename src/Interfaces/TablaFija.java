/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Codigo.EstiloTablaHeader;
import java.awt.Color;
import java.awt.Font;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edsson
 */
public class TablaFija extends javax.swing.JFrame {
    private DefaultTableModel m;
    
    /**
     * Creates new form TablaFija
     */
    public TablaFija() {
        initComponents();
        m=(DefaultTableModel) Fija.getModel();
        Fija.setModel(m);
        Fija.getTableHeader().setFont(new Font("Segoe UI",Font.BOLD,12));
        Fija.getTableHeader().setDefaultRenderer(new EstiloTablaHeader());
        Fija.getTableHeader().setForeground(Color.white);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Fija = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Fija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"if", "Reservada"},
                {"fn", "Reservada"},
                {"then", "Reservada"},
                {"decimal", "Reservada"},
                {"key", "Reservada"},
                {"btn", "Reservada"},
                {"kill", "Reservada"},
                {"resurrect", "Reservada"},
                {"setFunc", "Reservada"},
                {"getFunc", "Reservada"},
                {"hold", "Reservada"},
                {"pressed", "Reservada"},
                {"Invert", "Reservada"},
                {"getX", "Reservada"},
                {"getY", "Reservada"},
                {"true", "Reservada"},
                {"false", "Reservada"},
                {"int", "Reservada"},
                {"joy", "Reservada"},
                {"bool", "Reservada"},
                {"loop", "Reservada"},
                {"shatter", "Reservada"},
                {"swing", "Reservada"},
                {"case", "Reservada"},
                {"verify", "Reservada"},
                {"cast", "Reservada"},
                {"message", "Reservada"},
                {"getP", "Reservada"},
                {"reco", "Reservada"},
                {"getPort", "Reservada"},
                {"Array", "Reservada"},
                {"main", "Reservada"},
                {"word", "Reservada"},
                {"exception", "Reservada"},
                {"getButton", "Reservada"},
                {"enable", "Reservada"},
                {"podri", "Reservada"},
                {"&", "OperadorLogico"},
                {"|", "OperadorLogico"},
                {"||", "OperadorLogico"},
                {"+", "OperadorAritmetico"},
                {"-", "OperadorAritmetico"},
                {"*", "OperadorAritmetico"},
                {"/", "OperadorAritmetico"},
                {"%", "OperadorAritmetico"},
                {"+=", "OperadorAsignacion"},
                {"-=", "OperadorAsignacion"},
                {"=", "OperadorAsignacion"},
                {"(", "OperadorAgrupacion"},
                {")", "OperadorAgrupacion"},
                {"[", "OperadorAgrupacion"},
                {"]", "OperadorAgrupacion"},
                {"{", "OperadorAgrupacion"},
                {"}", "OperadorAgrupacion"},
                {">=", "OperadorRelacional"},
                {"<=", "OperadorRelacional"},
                {"<", "OperadorRelacional"},
                {">", "OperadorRelacional"},
                {"==", "OperadorRelacional"},
                {"<>", "OperadorRelacional"},
                {"++", "OperadorIncremental"},
                {"--", "OperadorIncremental"}
            },
            new String [] {
                "Lexema", "Componente lexico"
            }
        ));
        jScrollPane1.setViewportView(Fija);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablaFija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablaFija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablaFija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablaFija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablaFija().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Fija;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
